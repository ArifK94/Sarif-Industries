@model Sarif_Industries.View_Models.ProductDetail

<!DOCTYPE html>
<html lang="en">
<head>
    @{
        ViewBag.Title = "Details";
    }
</head>
<body>

    <!-- breadcrumb -->
    <div class="bread-crumb bgwhite flex-w p-l-52 p-r-15 p-t-30 p-l-15-sm">
        <a href="@Url.Action("Index","Home")" class="s-text16">
            Home
            <i class="fa fa-angle-right m-l-8 m-r-9" aria-hidden="true"></i>
        </a>

        <a href="@Url.Action("Shop","Products")" class="s-text16">
            Shop
            <i class="fa fa-angle-right m-l-8 m-r-9" aria-hidden="true"></i>
        </a>

        <a href="@Url.Action("Shop","Products", new { category = Model.ProductCategory.Category })" class="s-text16">

            @Model.ProductCategory.Category

            <i class="fa fa-angle-right m-l-8 m-r-9" aria-hidden="true"></i>
        </a>


        <span class="s-text17">
            @Model.Product.Name
        </span>
    </div>

    <!-- Product Detail -->
    <div class="container bgwhite p-t-35 p-b-80">
        <div class="flex-w flex-sb">
            <div class="w-size13 p-t-30 respon5">
                <div class="wrap-slick3 flex-sb flex-w">
                    <div class="wrap-slick3-dots"></div>

                    <div class="slick3">

                        @* Display other images *@

                        @foreach (var item in Model.ProductImages)
                        {
                            <div class="item-slick3" data-thumb="@item.FilePath">
                                <div class="wrap-pic-w">
                                    <img src="@item.FilePath" alt="IMG-PRODUCT">
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="w-size14 p-t-30 respon5">
                <h4 class="product-detail-name m-text16 p-b-13">
                    @Html.DisplayFor(model => @Model.Product.Name)
                </h4>

                @if (Model.Product.Stock > 0)
                {
                    @* Products on sale *@
                    if (Model.Product.StateId == 2)
                    {
                        <span class="block2-oldprice m-text7 p-r-5">
                            £@Html.DisplayFor(modelItem => Model.Product.Price)
                        </span>

                        foreach (var productSale in Model.ProductSalePrice)
                        {
                            if (productSale.ProductId == Model.Product.ProductId)
                            {
                                decimal saleprice;
                                saleprice = productSale.SalePrice;

                                <span class="block2-newprice m-text28 p-r-5">
                                    £@saleprice
                                </span>

                                <input id="price" type="hidden" value="@saleprice" />


                            }
                        }
                    }
                    @* Products not on sale *@
                    else
                    {
                        decimal price = Model.Product.Price;

                        <span class="block2-price m-text17 p-r-5">
                            £@price
                        </span>

                        <input id="price" type="hidden" value="@price" />


                    }

                    <div class="p-t-33 p-b-60">
                        <div class="flex-m flex-w">
                            <div class="s-text15 w-size15 t-center">
                                Color
                            </div>

                            <div class="rs2-select2 rs3-select2 bo4 of-hidden w-size16">
                                <select id="colour-selection" class="selection-2" name="color">
                                    @foreach (var item in Model.ProductColours)
                                    {
                                        <option>@item.Colour</option>
                                    }
                                </select>

                            </div>
                        </div>





                        <div class="flex-r-m flex-w p-t-10">
                            <div class="w-size16 flex-m flex-w">
                                <div class="flex-w bo5 of-hidden m-r-22 m-t-10 m-b-10">

                                    <button class="btn-num-product-down color1 flex-c-m size7 bg8 eff2">
                                        <i class="fs-12 fa fa-minus" aria-hidden="true"></i>
                                    </button>

                                    <input class="size8 m-text18 t-center num-product" id="quantity" type="number" name="num-product" value="1" readonly="readonly">

                                    <button class="btn-num-product-up color1 flex-c-m size7 bg8 eff2">
                                        <i class="fs-12 fa fa-plus" aria-hidden="true"></i>
                                    </button>
                                </div>

                                <div class="btn-addcart-product-detail size9 trans-0-4 m-t-10 m-b-10">

                                    <button type="button" class="flex-c-m sizefull bg1 bo-rad-23 hov1 s-text1 trans-0-4" onclick="AddItem(@Model.Product.ProductId)">
                                        Add to Cart
                                    </button>

                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="p-b-45">
                        <span class="s-text8 m-r-35">Stock: @Model.Product.Stock</span>
                        <span class="s-text8">Categories: @Model.ProductCategory.Category</span>
                    </div>
                }
                else
                {
                    <div class="p-b-45">
                        <span class="s-text10 m-r-35 text-uppercase text-danger">Out of Stock</span>
                    </div>
                }





                <!--  -->
                <div class="wrap-dropdown-content bo6 p-t-15 p-b-14 active-dropdown-content">
                    <h5 class="js-toggle-dropdown-content flex-sb-m cs-pointer m-text19 color0-hov trans-0-4">
                        Description
                        <i class="down-mark fs-12 color1 fa fa-minus dis-none" aria-hidden="true"></i>
                        <i class="up-mark fs-12 color1 fa fa-plus" aria-hidden="true"></i>
                    </h5>

                    <div class="dropdown-content dis-none p-t-15 p-b-23">
                        <p class="s-text8">
                            @Html.DisplayFor(model => @Model.Product.Description)
                        </p>
                    </div>
                </div>

                @if (Model.Product.StateId != 3)
                {
                    <div class="wrap-dropdown-content bo7 p-t-15 p-b-14">
                        <h5 class="js-toggle-dropdown-content flex-sb-m cs-pointer m-text19 color0-hov trans-0-4">
                            Reviews (@Model.TotalReviews)
                            <i class="down-mark fs-12 color1 fa fa-minus dis-none" aria-hidden="true"></i>
                            <i class="up-mark fs-12 color1 fa fa-plus" aria-hidden="true"></i>
                        </h5>

                        @foreach (var review in Model.Reviews)
                        {
                            foreach (var user in Model.Users)
                            {
                                if (review.UserId == user.UserId)
                                {
                                    <div class="dropdown-content dis-none p-t-15 p-b-23">
                                        <p class="s-text8">
                                            @review.Comment - <span class="font-weight-bold">@user.Forename @user.Surname</span>
                                            <span class="font-italic">@review.ReviewDate</span>
                                        </p>
                                    </div>
                                }

                            }

                        }
                    </div>

                    if (HttpContext.Current.Session["UserID"] != null)
                    {
                        using (Html.BeginForm("Details", "Products", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()

                            { Model.Review.ProductId = Model.Product.ProductId; }
                            @Html.HiddenFor(model => model.Review.ProductId)

                            @Html.TextAreaFor(model => model.Review.Comment,
                                    new
                                    {
                                        @class = "dis-block s-text7 size20 bo4 p-l-22 p-r-22 p-t-13 m-b-20 m-t-20",
                                        @placeholder = "Please enter your review here...",
                                        cols = 35,
                                        @rows = 3,
                                        maxlength = 100
                                    })

                            <div class="col-md-6 p-b-30">
                                <div class="w-size25">
                                    <button type="submit" class="flex-c-m size2 bg1 bo-rad-23 hov1 m-text3 trans-0-4">
                                        Submit Review
                                    </button>
                                </div>
                            </div>
                            }
                        }
                    }
            </div>
        </div>
    </div>


    <!-- Back to top -->
    <div class="btn-back-to-top bg0-hov" id="myBtn">
        <span class="symbol-btn-back-to-top">
            <i class="fa fa-angle-double-up" aria-hidden="true"></i>
        </span>
    </div>

    <!-- Container Selection -->
    <div id="dropDownSelect1"></div>
    <div id="dropDownSelect2"></div>

    <script type="text/javascript" src="~/Content/vendor/select2/select2.min.js"></script>

    <script type="text/javascript">
        $(".selection-1").select2({
            minimumResultsForSearch: 20,
            dropdownParent: $('#dropDownSelect1')
        });

        $(".selection-2").select2({
            minimumResultsForSearch: 20,
            dropdownParent: $('#dropDownSelect2')
        });
    </script>

    <script>
        $('.btn-num-product-down').on('click', function (e) {
            e.preventDefault();
            var numProduct = Number($(this).next().val());
            if (numProduct > 1) $(this).next().val(numProduct - 1);
        });

        $('.btn-num-product-up').on('click', function (e) {
            e.preventDefault();
            var numProduct = Number($(this).prev().val());
            if (numProduct < @Model.Product.Stock) $(this).prev().val(numProduct + 1);
        });
    </script>

</body>
</html>
